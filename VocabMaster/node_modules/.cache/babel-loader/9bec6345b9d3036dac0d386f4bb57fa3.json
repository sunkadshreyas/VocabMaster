{"ast":null,"code":"var _jsxFileName = \"/home/shreyas/Desktop/Web/ReactApps/VocabMaster/vocabmaster/src/components/Quiz.js\";\nimport React from 'react';\nimport data from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar random_words = require('random-words');\n\nvar quizset = [{\n  question: \"2+3=\",\n  options: [3, 4, 5, 6],\n  correct_answer: 5\n}];\n\nconst loadQuestions = () => {\n  data.listOfWords.map(word => {\n    var options = random_words(3) + word.word;\n    quizset.push({\n      options: options,\n      question: word.meaning,\n      correct_answer: word.word\n    });\n  });\n};\n\nclass Quiz extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      current_question: 0,\n      option_marked: null\n    };\n\n    this.nextQuestion = () => {\n      let current_Index = this.state.current_question;\n      let nextIndex = current_Index + 1;\n\n      if (current_Index === quizset.length - 1) {\n        nextIndex = -1;\n      }\n\n      this.setState({\n        current_question: nextIndex,\n        option_marked: null\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(data.listOfWords);\n    loadQuestions();\n    console.log(quizset);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Hello world!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }, this), this.state.current_question === -1 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [quizset[this.state.current_question].question, quizset[this.state.current_question].options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            cursor: \"pointer\"\n          },\n          onClick: () => this.setState({\n            option_marked: option\n          }),\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)), this.state.option_marked === null ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.option_marked === quizset[this.state.current_question].correct_answer ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"green\"\n            },\n            children: \"Correct\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Wrong\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.nextQuestion,\n          children: \"next question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"bye World!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/shreyas/Desktop/Web/ReactApps/VocabMaster/vocabmaster/src/components/Quiz.js"],"names":["React","data","random_words","require","quizset","question","options","correct_answer","loadQuestions","listOfWords","map","word","push","meaning","Quiz","Component","state","current_question","option_marked","nextQuestion","current_Index","nextIndex","length","setState","componentDidMount","console","log","render","option","cursor","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport data from './data';\nvar random_words = require('random-words');\n\n\nvar quizset = [\n    {\n      question : \"2+3=\",\n      options : [3,4,5,6],\n      correct_answer : 5\n    }\n  ];\n\n  \n\nconst loadQuestions = () => {\n  data.listOfWords.map(word => {\n    var options = random_words(3) + word.word\n    quizset.push({\n      options : options,\n      question : word.meaning,\n      correct_answer : word.word\n    })\n  })\n}\n\n\nclass Quiz extends React.Component{\n    state = {\n        current_question : 0,\n        option_marked : null\n      }\n      componentDidMount(){\n        console.log(data.listOfWords)\n        loadQuestions()\n        console.log(quizset)\n      }\n      nextQuestion = () => {\n        let current_Index = this.state.current_question\n        let nextIndex = current_Index + 1\n        if(current_Index === quizset.length - 1){\n          nextIndex = -1\n        }\n        this.setState({\n          current_question : nextIndex,\n          option_marked : null\n        });\n      }\n      render(){\n        return (\n         <div>\n           <div>Hello world!!</div>\n           {this.state.current_question === -1 ?\n           null : \n           <div>\n             {quizset[this.state.current_question].question}\n             {quizset[this.state.current_question].options.map(option => (\n              <div style={{cursor : \"pointer\"}} key={option} onClick={() => this.setState({\n                option_marked : option\n              })}>\n                {option}\n              </div>\n             ))}\n             {this.state.option_marked === null ? null : \n              <div>\n                {this.state.option_marked === quizset[this.state.current_question].correct_answer ? \n                  <div style={{color : \"green\"}}>Correct</div> : \n                  <div style={{color : \"red\"}}>Wrong</div>\n                }\n              </div>\n             }\n             <button onClick={this.nextQuestion}>next question</button>\n           </div>  \n            }\n           <div>bye World!!</div>\n         </div>\n        );\n      }\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}