{"ast":null,"code":"var _jsxFileName = \"/home/shreyas/Desktop/Web/ReactApps/VocabMaster/vocabmaster/src/components/DictionaryAPI.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DictionaryAPI extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      word: \"\",\n      meaning: \"\",\n      loading: true\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n    };\n  }\n\n  async componentDidMount() {\n    // best place to make requests\n    var url = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n    url = url + this.state.word;\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      word: data[0].word,\n      meaning: data[0].meanings[0].definitions[0].definition\n    });\n    console.log(this.state.word);\n    console.log(this.state.meaning);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter a word...\",\n        name: \"word\",\n        value: this.state.word,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), this.state.loading ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.meaning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/shreyas/Desktop/Web/ReactApps/VocabMaster/vocabmaster/src/components/DictionaryAPI.js"],"names":["React","DictionaryAPI","Component","state","word","meaning","loading","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","componentDidMount","url","response","fetch","data","json","meanings","definitions","definition","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA2C;AAAA;AAAA;AAAA,SACtDC,KADsD,GAC9C;AACJC,MAAAA,IAAI,EAAG,EADH;AAEJC,MAAAA,OAAO,EAAG,EAFN;AAGJC,MAAAA,OAAO,EAAG;AAHN,KAD8C;;AAAA,SAmBtDC,YAnBsD,GAmBtCC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AACV,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAsBH,KAAK,CAACE,MAAN,CAAaE;AADzB,OAAd;AAGH,KAvBqD;;AAAA,SAwBtDC,YAxBsD,GAwBtCL,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACM,cAAN;AACH,KA1BqD;AAAA;;AAM/B,QAAjBC,iBAAiB,GAAE;AACrB;AACA,QAAIC,GAAG,GAAG,kDAAV;AACAA,IAAAA,GAAG,GAAGA,GAAG,GAAG,KAAKb,KAAL,CAAWC,IAAvB;AACA,UAAMa,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKX,QAAL,CAAc;AACVL,MAAAA,IAAI,EAAGe,IAAI,CAAC,CAAD,CAAJ,CAAQf,IADL;AAEVC,MAAAA,OAAO,EAAGc,IAAI,CAAC,CAAD,CAAJ,CAAQE,QAAR,CAAiB,CAAjB,EAAoBC,WAApB,CAAgC,CAAhC,EAAmCC;AAFnC,KAAd;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWC,IAAvB;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWE,OAAvB;AACH;;AASDqB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKb,YAArB;AAAA,8BACI;AACI,QAAA,WAAW,EAAC,iBADhB;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,IAHtB;AAII,QAAA,QAAQ,EAAE,KAAKG;AAJnB;AAAA;AAAA;AAAA;AAAA,cADJ,EAOK,KAAKJ,KAAL,CAAWG,OAAX,GAAqB,IAArB,gBACG;AAAA,kBACK,KAAKH,KAAL,CAAWE;AADhB;AAAA;AAAA;AAAA;AAAA,cARR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AA3CqD","sourcesContent":["import React from 'react';\n\nexport default class DictionaryAPI extends React.Component{\n    state = {\n        word : \"\",\n        meaning : \"\",\n        loading : true\n    }\n    async componentDidMount(){\n        // best place to make requests\n        var url = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n        url = url + this.state.word\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({\n            word : data[0].word,\n            meaning : data[0].meanings[0].definitions[0].definition\n        });\n        console.log(this.state.word);\n        console.log(this.state.meaning);\n    }\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name] : event.target.value\n        });\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n    }\n    render(){\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input \n                    placeholder=\"Enter a word...\"\n                    name=\"word\"\n                    value={this.state.word}\n                    onChange={this.handleChange}\n                />\n                {this.state.loading ? null : \n                    <div>\n                        {this.state.meaning}\n                    </div>\n                }\n            </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}