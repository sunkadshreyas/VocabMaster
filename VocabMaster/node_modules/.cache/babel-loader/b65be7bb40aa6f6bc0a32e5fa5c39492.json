{"ast":null,"code":"var _jsxFileName = \"/home/shreyas/Desktop/Web/ReactApps/VocabMaster/vocabmaster/src/components/Quiz.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quiz extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      current_question: 0,\n      option_marked: null\n    };\n\n    this.nextQuestion = () => {\n      let current_Index = this.state.current_question;\n      let nextIndex = current_Index + 1;\n\n      if (current_Index === quizset.length - 1) {\n        nextIndex = -1;\n      }\n\n      this.setState({\n        current_question: nextIndex,\n        option_marked: null\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.current_question === -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"end of quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Which word's meaning is this :\", console.log(quizset), quizset[this.state.current_question].question, quizset[this.state.current_question].options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              cursor: \"pointer\"\n            },\n            onClick: () => this.setState({\n              option_marked: option\n            }),\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this)), this.state.option_marked === null ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.option_marked === quizset[this.state.current_question].correct_answer ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"green\"\n              },\n              children: \"Correct\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Wrong\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.nextQuestion,\n            children: \"next question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this), console.log(listOfWords)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/shreyas/Desktop/Web/ReactApps/VocabMaster/vocabmaster/src/components/Quiz.js"],"names":["React","Quiz","Component","state","current_question","option_marked","nextQuestion","current_Index","nextIndex","quizset","length","setState","render","console","log","question","options","map","option","cursor","correct_answer","color","listOfWords"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAMA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AACJC,MAAAA,gBAAgB,EAAG,CADf;AAEJC,MAAAA,aAAa,EAAG;AAFZ,KADsB;;AAAA,SAK5BC,YAL4B,GAKb,MAAM;AACnB,UAAIC,aAAa,GAAG,KAAKJ,KAAL,CAAWC,gBAA/B;AACA,UAAII,SAAS,GAAGD,aAAa,GAAG,CAAhC;;AACA,UAAGA,aAAa,KAAKE,OAAO,CAACC,MAAR,GAAiB,CAAtC,EAAwC;AACtCF,QAAAA,SAAS,GAAG,CAAC,CAAb;AACD;;AACD,WAAKG,QAAL,CAAc;AACZP,QAAAA,gBAAgB,EAAGI,SADP;AAEZH,QAAAA,aAAa,EAAG;AAFJ,OAAd;AAID,KAf2B;AAAA;;AAgB5BO,EAAAA,MAAM,GAAE;AACN,wBACC;AAAA,6BACE;AAAA,kBACG,KAAKT,KAAL,CAAWC,gBAAX,KAAgC,CAAC,CAAjC,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,gBAIE;AAAA,uDAEGS,OAAO,CAACC,GAAR,CAAYL,OAAZ,CAFH,EAGGA,OAAO,CAAC,KAAKN,KAAL,CAAWC,gBAAZ,CAAP,CAAqCW,QAHxC,EAIGN,OAAO,CAAC,KAAKN,KAAL,CAAWC,gBAAZ,CAAP,CAAqCY,OAArC,CAA6CC,GAA7C,CAAiDC,MAAM,iBACxD;AAAK,YAAA,KAAK,EAAE;AAACC,cAAAA,MAAM,EAAG;AAAV,aAAZ;AAA+C,YAAA,OAAO,EAAE,MAAM,KAAKR,QAAL,CAAc;AAC1EN,cAAAA,aAAa,EAAGa;AAD0D,aAAd,CAA9D;AAAA,sBAGGA;AAHH,aAAuCA,MAAvC;AAAA;AAAA;AAAA;AAAA,kBADC,CAJH,EAWG,KAAKf,KAAL,CAAWE,aAAX,KAA6B,IAA7B,GAAoC,IAApC,gBACD;AAAA,sBACG,KAAKF,KAAL,CAAWE,aAAX,KAA6BI,OAAO,CAAC,KAAKN,KAAL,CAAWC,gBAAZ,CAAP,CAAqCgB,cAAlE,gBACC;AAAK,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAG;AAAT,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAEC;AAAK,cAAA,KAAK,EAAE;AAACA,gBAAAA,KAAK,EAAG;AAAT,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,kBAZF,eAmBE;AAAQ,YAAA,OAAO,EAAE,KAAKf,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF,EAoBGO,OAAO,CAACC,GAAR,CAAYQ,WAAZ,CApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AALL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AAiCD;;AAlD2B;;AAqDlC,eAAerB,IAAf","sourcesContent":["import React from 'react';\n\n\n\n\n\nclass Quiz extends React.Component{\n    state = {\n        current_question : 0,\n        option_marked : null\n      }\n      nextQuestion = () => {\n        let current_Index = this.state.current_question\n        let nextIndex = current_Index + 1\n        if(current_Index === quizset.length - 1){\n          nextIndex = -1\n        }\n        this.setState({\n          current_question : nextIndex,\n          option_marked : null\n        });\n      }\n      render(){\n        return (\n         <div>\n           <div>\n             {this.state.current_question === -1 ?\n                <div>\n                  end of quiz\n                </div> : \n                <div>\n                  Which word's meaning is this : \n                  {console.log(quizset)}\n                  {quizset[this.state.current_question].question}\n                  {quizset[this.state.current_question].options.map(option => ( \n                  <div style={{cursor : \"pointer\"}} key={option} onClick={() => this.setState({\n                    option_marked : option\n                  })}>\n                    {option}\n                  </div>\n                  ))}\n                  {this.state.option_marked === null ? null : \n                  <div>\n                    {this.state.option_marked === quizset[this.state.current_question].correct_answer ? \n                      <div style={{color : \"green\"}}>Correct</div> : \n                      <div style={{color : \"red\"}}>Wrong</div>\n                    }\n                  </div>\n                  }\n                  <button onClick={this.nextQuestion}>next question</button>\n                  {console.log(listOfWords)}\n                </div>  \n                }\n           </div>\n         </div>\n        );\n      }\n}\n\nexport default Quiz;\n\n\n\n"]},"metadata":{},"sourceType":"module"}